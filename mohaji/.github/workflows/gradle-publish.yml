name: EC2에 배포

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: JDK 17 설정
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Gradle 설정
      uses: gradle/actions/setup-gradle@v3

    - name: gradlew 실행 권한 부여
      run: chmod +x ./gradlew

    - name: Gradle Wrapper로 빌드
      run: ./gradlew clean build

    - name: build/libs 디렉토리 목록 표시
      run: ls -la build/libs

    - name: 빌드 아티팩트 업로드
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: build/libs/mohaji-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: 빌드 아티팩트 다운로드
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: build/libs/

    - name: SSH 키 설정
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.MOHAJI_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: known_hosts 추가 및 확인
      run: |
        touch ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        ssh-keyscan -H 13.125.237.85 | tee -a ~/.ssh/known_hosts
        
    - name: SSH 연결 테스트
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@13.125.237.85 'echo "SSH 연결 성공"'

    - name: SSH를 통해 파일 복사
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa build/libs/mohaji-0.0.1-SNAPSHOT.jar ubuntu@13.125.237.85:/home/ubuntu/
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa mohaji_docker/dockerfile ubuntu@13.125.237.85:/home/ubuntu/
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa mohaji_docker/docker-compose.yml ubuntu@13.125.237.85:/home/ubuntu/

    - name: Docker 이미지 배포
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@13.125.237.85 << 'EOF'
          cd /home/ubuntu/
          docker-compose down
          docker-compose up -d --build
        EOF
